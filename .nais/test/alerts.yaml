apiVersion: "monitoring.coreos.com/v1"
kind: PrometheusRule
metadata:
  name: alert-vardef
  namespace: dapla-metadata
  labels:
    team: dapla-metadata
spec:
  groups:
    - name: dapla-metadata
      rules:
        - alert: High number of errors
          expr: (100 * sum by (app, namespace) (rate(logback_events_total{app="vardef",level="error"}[3m])) / sum by (app, namespace) (rate(logback_events_total{app="vardef"}[3m]))) > 10
          for: 3m
          annotations:
            title: "High number of errors logged"
            consequence: "There can be different causes for errors, check logs for cause and evaluation of consequences."
            action: "`kubectl describe pod -l app=vardef -n dapla-metadata` -> `kubectl logs <podname>`"
          labels:
            service: vardef
            namespace: dapla-metadata
            severity: critical
            environment: test

        - alert: A Vardef client is unavailable
          expr: rate(http_client_requests_seconds_count{app="vardef", status!="200"}[1m]) > 0
          for: 1m
          annotations:
            title: "A Vardef client is unavailable "
            consequence: "The service may lack some functionality"
            description: "Client {{ $labels.serviceId }} responded with {{ $labels.status }} causing {{ $labels.exception }}"
          labels:
            service: vardef
            namespace: dapla-metadata
            severity: critical
            environment: test

        - alert: Vardef is unavailable
          expr: kube_deployment_status_replicas_available{deployment="vardef"} == 0
          for: 1m
          annotations:
            title: "Vardef is unavailable"
            consequence: "Service is unavailable to users. "
          labels:
            service: vardef
            namespace: dapla-metadata
            severity: critical
            environment: test
