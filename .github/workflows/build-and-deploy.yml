name: Image Build and Deploy

on:
  release:
    types: [ published ]
  #push:
  #  branches:
  #    - main
  pull-request:


env:
  REGISTRY: europe-north1-docker.pkg.dev/${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}/dapla-metadata
  DOCKER_IMAGE: europe-north1-docker.pkg.dev/${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}/dapla-metadata/vardef:${{ github.sha }}
  DOCKER_IMAGE_WITHOUT_TAG: europe-north1-docker.pkg.dev/${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}/dapla-metadata/vardef

jobs:
  docker-build:
    name: Docker build
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    outputs:
      nais_cluster: ${{ steps.nais-deploy-vars.outputs.nais_cluster }}
      nais_config_path: ${{ steps.nais-deploy-vars.outputs.nais_config_path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for what-changed action

      - name: Set nais environment variables
        id: nais-deploy-vars
        run: |
          if [[ ${{ github.event_name }} == "release" ]]; then
            echo "nais_cluster=prod" >> "$GITHUB_OUTPUT"
            echo "nais_config_path=.nais/prod/nais.yaml" >> "$GITHUB_OUTPUT"
          else
            echo "nais_cluster=test" >> "$GITHUB_OUTPUT"
            echo "nais_config_path=.nais/test/nais.yaml" >> "$GITHUB_OUTPUT"
          fi

      - name: Determine what to do
        id: changed-files
        uses: "nais/what-changed@main"
        with:
          files: .nais/test/nais.yaml .nais/test/alerts.yaml

      - name: "Authenticate to Google Cloud"
        id: "auth"
        uses: "google-github-actions/auth@v2.1.8"
        with:
          workload_identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # Provided as Organization Secret
          service_account: "gh-ssb@${{ secrets.NAIS_MANAGEMENT_PROJECT_ID }}.iam.gserviceaccount.com"
          token_format: "access_token"

      - name: Login to registry
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: docker/login-action@v3
        with:
          registry: ${{env.REGISTRY}}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Set up Java
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Set up gradle
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: gradle/actions/setup-gradle@v4

      - name: Build and push Docker image
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: >
          ./gradlew
          cyclonedxBom
          jib
          --image=${{ env.DOCKER_IMAGE }}
          --daemon --parallel --build-cache

      - name: Set docker image env var
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: |
          echo "DOCKER_IMAGE_DIGEST=$(cat build/jib-image.digest)" >> $GITHUB_ENV

      - name: "Attest and sign"
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: 'nais/attest-sign@v1.3.4'
        with:
          image_ref: ${{ env.DOCKER_IMAGE_WITHOUT_TAG }}@${{ env.DOCKER_IMAGE_DIGEST }}
          # This SBOM includes all JVM dependencies (generated with cyclonedxBom) but does
          # not include other software installed in the image (e.g. OS libraries, tools).
          # A future improvement could be to generate this and merge the BOMs
          sbom: build/reports/bom.json

      - name: Deploy to Nais
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ needs.docker-build.outputs.nais_cluster }}
          RESOURCE: ${{ needs.docker-build.outputs.nais_config_path }}
          WORKLOAD_IMAGE: ${{ env.DOCKER_IMAGE  }}
          DEPLOY_SERVER: deploy.ssb.cloud.nais.io:443
