micronaut:
  application:
    name: vardef
  security:
    jwks:
      # Token signature verification is performed by the gateway
      enabled: false
    token:
      jwt:
        claims:
          keys:
            dapla: dapla
            dapla-groups: groups
            dapla-teams: teams
            username: preferred_username
          values:
            allowed-audiences:
              - onyxia-api
              - dapla-cli
    intercept-url-map:
      - pattern: /health/**
        http-method: GET
        access: isAnonymous()
      - pattern: /metrics/**
        http-method: GET
        access: isAnonymous()
      - pattern: /prometheus/**
        http-method: GET
        access: isAnonymous()
      - pattern: /docs/**
        http-method: GET
        access: isAnonymous()
      - pattern: /**
        access: isAuthenticated()
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /docs/openapi/variable-definitions/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /docs/swagger/variable-definitions/**
  openapi:
    groups:
      public:
        packages: no.ssb.metadata.vardef.controllers.publicapi
        filename: variable-definitions-public
        primary: true
      internal:
        packages: no.ssb.metadata.vardef.controllers.internalapi
        filename: variable-definitions-internal
    property:
      naming:
        strategy: SNAKE_CASE
    views:
      spec: |
        mapping.path=/docs/openapi/variable-definitions/,
        swagger-ui.enabled=true,
        swagger-ui.js.url=/docs/swagger/variable-definitions/res/,
        swagger-ui.tagsSorter=Function=(a => a),
  serde:
    deserialization:
      ignore-unknown: false
      strict-nullable: true
    serialization:
      inclusion: always
  logger:
    config: logback.xml

  server:
    netty:
      access-logger:
        enabled: true
        exclusions:
          - /health/.+
          - /metrics
          - /prometheus
          - /docs/.+
          - /favicon.ico
        log-format: '{
          "requestMethod":"%m",
          "requestUrl":"%x",
          "status":%s,
          "responseSize":"%B",
          "userAgent":"%{User-Agent}i",
          "remoteIp":"%a",
          "serverIp":"%A",
          "referer":"%i",
          "latency":"%Dms",
          "protocol":"%H"}'
  caches:
    classifications:
      maximumSize: 3600
      expire-after-write: 24h
    codes:
      maximumSize: 3600
      expire-after-write: 24h

  http:
    services:
      klass:
        url: https://data.ssb.no/api/klass/v1/
        health-check: true
        health-check-interval: 15s
      vardok:
        url: https://www.ssb.no/a/xml/metadata/conceptvariable/vardok/
      dapla-team-api:
        url: https://dapla-team-api.intern.test.ssb.no
        health-check: true
        health-check-interval: 15s
        health-check-uri: /api-docs
      keycloak:
        url: https://auth.test.ssb.no/
        clientId: vardef-to-dapla-team-api-m2m
        clientSecret: ${KEYCLOAK_CLIENT_SECRET}
        health-check: true
        health-check-interval: 15s

  klass-web:
    url:
      en: https://www.ssb.no/en/klass
      nb: https://www.ssb.no/klass

  metrics:
    sensitive: false
    enabled: true
    custom:
      # Used for exporting custom business metrics
      update-frequency: 1h
      initial-delay: 30s
    tags:
      application: ${micronaut.application.name}
    export:
      prometheus:
        enabled: true
        descriptions: true
        step: PT1M

endpoints:
  all:
    port: 8090
  environments:
    enabled: true
    sensitive: false
  health:
    sensitive: false
    details-visible: ANONYMOUS
    service-http-client:
      enabled: true
    monitor:
      enabled: true

jackson:
  xml:
    enabled: true
