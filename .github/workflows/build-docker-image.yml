# This workflow will build and push a new Docker image to the default Artifact Registry in SSB.
#
# Overview:
# 1. Authenticate to Google Cloud
# 2. Authenticate to Artifact Registry
# 3. Build and publish a docker image to Google Artifact Registry
#
# To configure this workflow:
# 1. Change the values for the IMAGE_NAME and TEAM_NAME environment variables (below).
# 2. The image will be tagged with the git commit hash and latest. To override the default tags, add tags to the build_metadata step.
#
# This workflow is tailored for SSBÂ´s setup, however if you wish to use this in a non SSB context ensure/change the following:
# 1. Create GitHub secrets for GAR_PROJECT_NUMBER and GAR_PROJECT_ID (Number and ID for the Artifact Registry project).
# 2. Create and configure Workload Identity Federation for GitHub.

name: Image Build and Deploy

on:
  workflow_call:
    inputs:
      registry:
        description: Registry, for example "europe-north1-docker.pkg.dev"
        required: true
        type: string
      repository:
        description: Registry repository
        required: true
        type: string
      image-name:
        description: Image name
        required: true
        type: string
      image-tag:
        description: Tag for the image
        required: true
        type: string
    secrets:
      registry-project:
        description: Artifact Registry project

jobs:
  docker-build:
    name: Docker build
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set docker image env var
        run: |
          echo "DOCKER_IMAGE=${{inputs.registry}}/${{inputs.image-name}}:${{inputs.image-tag}}" >> $GITHUB_ENV
      - name: "Authenticate to Google Cloud"
        id: "auth"
        uses: "google-github-actions/auth@v2.1.7"
        with:
          workload_identity_provider: "projects/848539402404/locations/global/workloadIdentityPools/gh-actions/providers/gh-actions"
          service_account: "gh-actions-dapla-metadata@artifact-registry-5n.iam.gserviceaccount.com"
          token_format: "access_token"

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build and push Docker image
        run: >
          ./gradlew
          jib
          --image=${{ env.DOCKER_IMAGE }}
          --daemon --parallel --build-cache

